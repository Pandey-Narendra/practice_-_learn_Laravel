similar_text("Hello", "Hallo", $percent);
echo $percent; // Output: 80


1) strcasecmp : echo strcasecmp("Hello", "hello"); // Output: 0

2) strcmp : echo strcmp("a", "b"); // Output: -1

3) str_contains : var_dump(str_contains("Hello World", "World")); // Output: bool(true)

4) str_ends_with : var_dump(str_ends_with("file.txt", ".txt")); // Output: bool(true)

5) str_starts_with : var_dump(str_starts_with("http://", "http")); // Output: bool(true)

6) strncmp : echo strncmp("Hello", "Hellp", 4); // Output: 0

7) strpos : echo strpos("Hello World", "World"); // Output: 6

8) strrchr : echo strrchr("dir/file.txt", "/"); // Output: /file.txt

9) strrpos : echo strrpos("abacaba", "a"); // Output: 6

10) strspn : echo strspn("123abc", "123"); // Output: 3

11) strstr : echo strstr("user@example.com", "@"); // Output: @example.com

12) stripos : echo stripos("Hello", "hello"); // Output: 0

13) stristr : echo stristr("Hello World", "world"); // Output: World

14) strripos : echo strripos("abAcAba", "a"); // Output: 6

15) chr : echo chr(65); // Output: A

16) chunk_split : echo chunk_split("HelloWorld", 5, "-"); // Output: Hello-World-

17) crypt : echo crypt("password", "salt"); // Output: hashed string

18) md5() : echo md5("Hello"); // Output: 8b1a9953c4611296a827abf8c47804d7

19) sha1() : echo sha1("Hello"); // Output: f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0

20) similar_text() :    similar_text("Hello", "Hallo", $percent);
                        echo $percent; // Output: 80

21) str_ireplace : str_ireplace($search, $replace, $subject, &$count)

22) str_replace : str_replace($search, $replace, $subject, &$count)
                        echo str_replace("World", "PHP", "Hello World"); // Output: Hello PHP


23) count_chars($string, $mode) : Returns char frequency in a string
                                  print_r(count_chars("Hello", 1)); // Output: Array of char => count

24) explode($separator, $string, $limit)  : Splits a string by a delimiter into an array.
                                            print_r(explode(" ", "Hello World")); // Output: Array ( [0] => Hello [1] => World )


25) implode($glue, $array)  : Joins array elements into a string with a glue.
                                echo implode(", ", array("apple", "banana")); // Output: apple, banana
    join($glue, $array)         echo join(", ", array("apple", "banana")); // Output: apple, banana

26) lcfirst($string) : Makes the first character lowercase.
                        echo lcfirst("Hello"); // Output: hello
                
27) str_decrement($string) : Decrements an alphanumeric string
                                echo str_decrement("AA"); // Output: Z

28) str_increment($string) : Increments an alphanumeric string.
                             echo str_increment("AZ"); // Output: BA

29) str_pad($string, $length, $pad_string, $pad_type) : Pads a string to a certain length
                                                        echo str_pad("Hello", 10, "*");

30) str_repeat($string, $multiplier) : Repeats a string a given number of times.
                                        echo str_repeat("-", 5); // Output: -----

 31) str_shuffle($string) : Randomly shuffles a string    
                            echo str_shuffle("abc"); // Output: random like "cab" 

32) str_split($string, $length)  : Splits a string into an array of chunks.
                                    print_r(str_split("Hello", 2)); // Output: Array ( [0] => He [1] => ll [2] => o )

33) str_word_count($string, $format, $charlist) : Returns word count or list.
                                                   echo str_word_count("Hello World"); // Output: 2

34 ) strrev($string) :  Reverses a string.  
                         echo strrev("Hello"); // Output: olleH


35) strtolower($string) : Converts string to lowercase.
                            echo strtolower("Hello"); // Output: hello     

36) strtoupper($string)  : Converts string to uppercase.
                            echo strtoupper("hello");

37) substr($string, $start, $length) :  Returns a part of a string.
                                         echo substr("Hello", 1, 3); // Output: ell 


38) substr_count($haystack, $needle, $offset, $length) : Counts occurrences of a substring.
                                                            echo substr_count("abab", "ab"); // Output: 2   

39 ) substr_replace($string, $replacement, $start, $length) : Replaces a portion of a string.
                                                                echo substr_replace("Hello", "World", 0); // Output: World

40) ucfirst($string) :  Makes first character uppercase.
                        echo ucfirst("hello"); // Output: Hello  

41)  ucwords($string, $delimiters) : Uppercases first char of each word. 
                                        echo ucwords("hello world"); // Output: Hello World                                                                                                                               



### PHP Array Functions


1) array($key => $value, ...) : Creates an array and To initialize arrays with values
                                $arr = array("a" => 1, "b" => 2);
                                print_r($arr); // Output: Array ( [a] => 1 [b] => 2 )

2)  array_combine($keys, $values) :  Creates array using one array for keys and another for values.              
                                        print_r(array_combine($keys, $values)); // Output: Array ( [a] => 1 [b] => 2 )


3) array_fill($start_index, $num, $value) : Fills an array with values and To create arrays with repeated values.
                                                print_r(array_fill(0, 3, "blue")); // Output: Array ( [0] => blue [1] => blue [2] => blue )    

4) compact($var1, $var2, ...) :   Creates array from variables and their values 
                                    print_r(compact("name", "age")); // Output: Array ( [name] => John [age] => 30 )   

5) range($start, $end, $step) :   Creates an array of a range of elements                                             
                                    print_r(range(1, 5)); // Output: Array ( [0] => 1 [1] => 2 [2] => 3 [3] => 4 [4] => 5 )

                                    
                                                                                                  